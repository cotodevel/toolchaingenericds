#include "gungsuh12.h"
#include "typedefsTGDS.h"
#include "dsregs.h"
#include "dsregs_asm.h"

using namespace WoopsiUI;

static const u16 Gungsuh12_glyphdata[423] = {
/* '!' */	0xFD80,
/* '"' */	0xB680,0x0000,0x0000,
/* '#' */	0x5295,0xF52B,0xEA52,0x8000,
/* '$' */	0x211B,0x38B8,0x31CD,0x8840,
/* '%' */	0x6122,0x4333,0x9984,0x890C,0x0000,0x0000,
/* '&' */	0x6208,0x10DA,0xC924,0x6C00,0x0000,
/* ''' */	0xE000,
/* '(' */	0x2949,0x2448,0x8000,
/* ')' */	0x8912,0x494A,0x0000,
/* '*' */	0x0000,0x4F91,0x4000,0x0000,
/* '+' */	0x0008,0x4F90,0x8000,0x0000,
/* ',' */	0x0000,0x5800,
/* '-' */	0x0000,0x0F80,0x0000,0x0000,
/* '.' */	0x00C0,
/* '/' */	0x0844,0x2211,0x0884,0x0000,
/* '0' */	0x7463,0x18C6,0x3170,0x0000,
/* '1' */	0xE108,0x4210,0x84F8,0x0000,
/* '2' */	0x7462,0x1111,0x3D98,0x0000,
/* '3' */	0xFC44,0xE086,0x3170,0x0000,
/* '4' */	0x118C,0xA54B,0xE238,0x0000,
/* '5' */	0xFC61,0xE884,0x3170,0x0000,
/* '6' */	0x7461,0xE8C6,0x3170,0x0000,
/* '7' */	0xECE2,0x2110,0x8420,0x0000,
/* '8' */	0x7463,0x1746,0x3170,0x0000,
/* '9' */	0x7463,0x18BC,0x3170,0x0000,
/* ':' */	0x6300,
/* ';' */	0x1405,0x8000,
/* '<' */	0x0888,0x8820,0x8208,0x0000,
/* '=' */	0x0001,0xF003,0xE000,0x0000,
/* '>' */	0x8208,0x2088,0x8880,0x0000,
/* '?' */	0x7462,0x1110,0x8021,0x0000,
/* '@' */	0x388A,0x752A,0x53E0,0x2238,0x0000,0x0000,
/* 'A' */	0x7020,0xA142,0x8F91,0x22EE,0x0000,0x0000,
/* 'B' */	0xF914,0x5179,0x1451,0xF800,0x0000,
/* 'C' */	0x3538,0x6182,0x0811,0x3800,0x0000,
/* 'D' */	0xF889,0x0A14,0x2850,0xA2F8,0x0000,0x0000,
/* 'E' */	0xFD14,0x1279,0x2411,0xFC00,0x0000,
/* 'F' */	0xFD14,0x1279,0x2410,0xF000,0x0000,
/* 'G' */	0x349A,0x1409,0xF0A1,0x223C,0x0000,0x0000,
/* 'H' */	0xEE89,0x1227,0xC891,0x22EE,0x0000,0x0000,
/* 'I' */	0xF908,0x4210,0x84F8,0x0000,
/* 'J' */	0x7C41,0x0412,0x4924,0xE000,0x0000,
/* 'K' */	0xEE89,0x2287,0x0911,0x22E6,0x0000,0x0000,
/* 'L' */	0xE104,0x1041,0x1451,0xFC00,0x0000,
/* 'M' */	0xC689,0xB365,0x4A95,0x22EE,0x0000,0x0000,
/* 'N' */	0xCEC9,0x92A5,0x4993,0x22E4,0x0000,0x0000,
/* 'O' */	0x3128,0x6186,0x1852,0x3000,0x0000,
/* 'P' */	0xF914,0x5145,0xE410,0xF000,0x0000,
/* 'Q' */	0x3092,0x1428,0x50AD,0x243A,0x0800,0x0000,
/* 'R' */	0xF889,0x1227,0x8911,0x22E6,0x0000,0x0000,
/* 'S' */	0x6CE3,0x0706,0x39B0,0x0000,
/* 'T' */	0xFF26,0x4881,0x0204,0x087C,0x0000,0x0000,
/* 'U' */	0xEE89,0x1224,0x4891,0x2238,0x0000,0x0000,
/* 'V' */	0xEE89,0x1222,0x850A,0x0810,0x0000,0x0000,
/* 'W' */	0xEE89,0x52A5,0x4F8A,0x1428,0x0000,0x0000,
/* 'X' */	0xEE88,0xA141,0x050A,0x22EE,0x0000,0x0000,
/* 'Y' */	0xEE89,0x1142,0x8204,0x087C,0x0000,0x0000,
/* 'Z' */	0xFC64,0x2211,0x29F8,0x0000,
/* '[' */	0xF249,0x2493,0x8000,
/* '\' */	0xEE89,0x56B5,0x4F8A,0x1428,0x0000,0x0000,
/* ']' */	0xE492,0x4927,0x8000,
/* '^' */	0x22A2,0x0000,0x0000,0x0000,
/* '_' */	0x0000,0x0000,0x00F8,0x0000,
/* '`' */	0x9000,0x0000,
/* 'a' */	0x0007,0x227A,0x28A6,0x6C00,0x0000,
/* 'b' */	0xC105,0x9945,0x1459,0x5800,0x0000,
/* 'c' */	0x0003,0x5386,0x0811,0x3800,0x0000,
/* 'd' */	0x1826,0xA68A,0x28A6,0x6C00,0x0000,
/* 'e' */	0x001D,0x18FE,0x1170,0x0000,
/* 'f' */	0x3A11,0xF421,0x08F0,0x0000,
/* 'g' */	0x0006,0xE68A,0x299A,0x082F,0x0000,
/* 'h' */	0xC081,0x6324,0x4891,0x22EE,0x0000,0x0000,
/* 'i' */	0x2038,0x4210,0x84F8,0x0000,
/* 'j' */	0x1071,0x1111,0x1E00,
/* 'k' */	0xC105,0xD251,0xC492,0xDC00,0x0000,
/* 'l' */	0xE108,0x4210,0x84F8,0x0000,
/* 'm' */	0x0002,0xA2A5,0x4A95,0x2AD6,0x0000,0x0000,
/* 'n' */	0x000B,0x1249,0x2492,0xCC00,0x0000,
/* 'o' */	0x0003,0x1286,0x1852,0x3000,0x0000,
/* 'p' */	0x000D,0x9945,0x1459,0x590F,0x0000,
/* 'q' */	0x0006,0xE68A,0x28A6,0x6823,0xC000,
/* 'r' */	0x0036,0xD421,0x08E0,0x0000,
/* 's' */	0x001F,0x1838,0x31F0,0x0000,
/* 't' */	0x423C,0x8421,0x0930,0x0000,
/* 'u' */	0x0003,0x3224,0x4891,0x2636,0x0000,0x0000,
/* 'v' */	0x0003,0xBA24,0x450A,0x0810,0x0000,0x0000,
/* 'w' */	0x0003,0xBA25,0x4A95,0x1428,0x0000,0x0000,
/* 'x' */	0x0003,0xBA22,0x820A,0x22EE,0x0000,0x0000,
/* 'y' */	0x0003,0xBA24,0x450A,0x0810,0x43C0,0x0000,
/* 'z' */	0x003F,0x1911,0x31F8,0x0000,
/* '{' */	0x3908,0x4260,0x8421,0x0E00,
/* '|' */	0xFFE0,
/* '}' */	0xE108,0x420C,0x8421,0x3800,
/* '~' */	0x0000,0x0006,0x3380,0x0000,0x0000,0x0000,
/* 0x7F */	0xF999,0x9999,0xF000,
};

static const u16 Gungsuh12_offset[95] = {
    0,    1,    4,    8,   12,   18,   23,   24,   27,   30,   34,   38,   40,   44,   45,   49,
   53,   57,   61,   65,   69,   73,   77,   81,   85,   89,   90,   92,   96,  100,  104,  108,
  114,  120,  125,  130,  136,  141,  146,  152,  158,  162,  167,  173,  178,  184,  190,  195,
  200,  206,  212,  216,  222,  228,  234,  240,  246,  252,  256,  259,  265,  268,  272,  276,
  278,  283,  288,  293,  298,  302,  306,  311,  317,  321,  324,  329,  333,  339,  344,  349,
  354,  359,  363,  367,  371,  377,  383,  389,  395,  401,  405,  409,  410,  414,  420
};

static const u8 Gungsuh12_width[95] = {
 1, 3, 5, 5, 7, 6, 1, 3, 3, 5, 5, 2, 5, 1, 5, 5,
 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 2, 5, 5, 5, 5, 7,
 7, 6, 6, 7, 6, 6, 7, 7, 5, 6, 7, 6, 7, 7, 6, 6,
 7, 7, 5, 7, 7, 7, 7, 7, 7, 5, 3, 7, 3, 5, 5, 2,
 6, 6, 6, 6, 5, 5, 6, 7, 5, 4, 6, 5, 7, 6, 6, 6,
 6, 5, 5, 5, 7, 7, 7, 7, 7, 5, 5, 1, 5, 7, 4
};

Gungsuh12::Gungsuh12(u8 fixedWidth) : PackedFont1 (
	33,
	127,
	Gungsuh12_glyphdata,
	Gungsuh12_offset,
	Gungsuh12_width,
	12,
	3,
	7) {
	if (fixedWidth) setFontWidth(fixedWidth);
};
