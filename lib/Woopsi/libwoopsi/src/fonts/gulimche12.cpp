#include "gulimche12.h"
#include "typedefsTGDS.h"
#include "dsregs.h"
#include "dsregs_asm.h"

using namespace WoopsiUI;

static const u16 Gulimche12_glyphdata[334] = {
/* '!' */	0xFEC0,
/* '"' */	0xB400,0x0000,0x0000,
/* '#' */	0x1457,0xCA28,0xAFD4,0x5140,0x0000,
/* '$' */	0x23AB,0x4618,0xA5AB,0x8800,
/* '%' */	0x4D6C,0xA211,0x4DAC,0x8000,
/* '&' */	0x64A5,0x2656,0x5293,0x4000,
/* ''' */	0xC000,
/* '(' */	0x2949,0x2489,0x1000,
/* ')' */	0x8912,0x4929,0x4000,
/* '*' */	0x0000,0x427C,0x8A00,0x0000,
/* '+' */	0x0000,0x427C,0x8400,0x0000,
/* ',' */	0x0000,0x5800,
/* '-' */	0x0000,0x007C,0x0000,0x0000,
/* '.' */	0x00C0,
/* '/' */	0x0844,0x2211,0x0884,0x0000,
/* '0' */	0x7463,0x18C6,0x318B,0x8000,
/* '1' */	0x7555,0x5000,
/* '2' */	0x7462,0x1111,0x1087,0xC000,
/* '3' */	0x7462,0x1304,0x318B,0x8000,
/* '4' */	0x118C,0xA54A,0x5F10,0x8000,
/* '5' */	0xFC21,0x0F44,0x218B,0x8000,
/* '6' */	0x7461,0x0F46,0x318B,0x8000,
/* '7' */	0xFC62,0x1108,0x8421,0x0000,
/* '8' */	0x7463,0x1746,0x318B,0x8000,
/* '9' */	0x7463,0x18BC,0x218B,0x8000,
/* ':' */	0x3180,
/* ';' */	0x0501,0x6000,
/* '<' */	0x0002,0x2641,0x8208,0x0000,
/* '=' */	0x0000,0x0F83,0xE000,0x0000,
/* '>' */	0x0020,0x8304,0xC880,0x0000,
/* '?' */	0x7462,0x1110,0x8021,0x0000,
/* '@' */	0x3267,0x5AD6,0xB783,0x8000,
/* 'A' */	0x2108,0xA52B,0xF18C,0x4000,
/* 'B' */	0xF463,0x1F46,0x318F,0x8000,
/* 'C' */	0x7463,0x0842,0x118B,0x8000,
/* 'D' */	0xF463,0x18C6,0x318F,0x8000,
/* 'E' */	0xFC21,0x0FC2,0x1087,0xC000,
/* 'F' */	0xFC21,0x0F42,0x1084,0x0000,
/* 'G' */	0x7463,0x0BC6,0x319B,0x4000,
/* 'H' */	0x8C63,0x1FC6,0x318C,0x4000,
/* 'I' */	0xFFC0,
/* 'J' */	0x1111,0x1119,0x9600,
/* 'K' */	0x8CA5,0x4C52,0x9294,0x4000,
/* 'L' */	0x8421,0x0842,0x1087,0xC000,
/* 'M' */	0x8C77,0xBDD6,0xB58C,0x4000,
/* 'N' */	0x8C73,0x9AD6,0x738C,0x4000,
/* 'O' */	0x7463,0x18C6,0x318B,0x8000,
/* 'P' */	0xF463,0x18FA,0x1084,0x0000,
/* 'Q' */	0x7463,0x18C6,0x31AB,0x8200,
/* 'R' */	0xF463,0x18FA,0x518C,0x4000,
/* 'S' */	0x7462,0x8208,0x318B,0x8000,
/* 'T' */	0xF908,0x4210,0x8421,0x0000,
/* 'U' */	0x8C63,0x18C6,0x318B,0x8000,
/* 'V' */	0x8C63,0x1529,0x4421,0x0000,
/* 'W' */	0xAD6B,0x5AD6,0xAA52,0x8000,
/* 'X' */	0x8C54,0xA211,0x4A8C,0x4000,
/* 'Y' */	0x8C62,0xA528,0x8421,0x0000,
/* 'Z' */	0xF844,0x2211,0x0887,0xC000,
/* '[' */	0xEAAA,0xAB00,
/* '\' */	0x5555,0x7F55,0x554A,0x28A0,0x0000,
/* ']' */	0xD555,0x5700,
/* '^' */	0x6900,0x0000,0x0000,
/* '_' */	0x0000,0x0000,0x0000,0x3E00,
/* '`' */	0x9000,0x0000,
/* 'a' */	0x0000,0xC93A,0x5293,0x4000,
/* 'b' */	0x8421,0xE8C6,0x318F,0x8000,
/* 'c' */	0x0000,0xE8C2,0x108B,0x8000,
/* 'd' */	0x0842,0xF8C6,0x318B,0xC000,
/* 'e' */	0x0000,0xE8C7,0xF08B,0x8000,
/* 'f' */	0x2974,0x9248,0x0000,
/* 'g' */	0x0000,0xF8C6,0x2F0C,0x5C00,
/* 'h' */	0x8421,0xE8C6,0x318C,0x4000,
/* 'i' */	0xDFC0,
/* 'j' */	0x2412,0x4927,0x0000,
/* 'k' */	0x8421,0x1953,0x1494,0x4000,
/* 'l' */	0x7FC0,
/* 'm' */	0x0001,0xAAD6,0xB5AD,0x4000,
/* 'n' */	0x0001,0xE8C6,0x318C,0x4000,
/* 'o' */	0x0000,0xE8C6,0x318B,0x8000,
/* 'p' */	0x0001,0xE8C6,0x31F4,0x2000,
/* 'q' */	0x0000,0xF8C6,0x3178,0x4200,
/* 'r' */	0x000B,0xC888,0x8800,
/* 's' */	0x0000,0xE8C1,0xC18B,0x8000,
/* 't' */	0x044F,0x4444,0x4300,
/* 'u' */	0x0001,0x18C6,0x318B,0xC000,
/* 'v' */	0x0001,0x18C5,0x4A21,0x0000,
/* 'w' */	0x0001,0x5AD6,0xAE52,0x8000,
/* 'x' */	0x0001,0x18A8,0x8A8C,0x4000,
/* 'y' */	0x0001,0x18C5,0x4A21,0x3000,
/* 'z' */	0x0001,0xF088,0x8887,0xC000,
/* '{' */	0x1222,0x2C22,0x2221,
/* '|' */	0xFFF0,
/* '}' */	0x8444,0x4344,0x4448,
/* '~' */	0x0000,0x0036,0x4000,0x0000,
/* 0x7F */	0x0F99,0x9999,0x9F00,
};

static const u16 Gulimche12_offset[95] = {
    0,    1,    4,    9,   13,   17,   21,   22,   25,   28,   32,   36,   38,   42,   43,   47,
   51,   53,   57,   61,   65,   69,   73,   77,   81,   85,   86,   88,   92,   96,  100,  104,
  108,  112,  116,  120,  124,  128,  132,  136,  140,  141,  144,  148,  152,  156,  160,  164,
  168,  172,  176,  180,  184,  188,  192,  196,  200,  204,  208,  210,  215,  217,  220,  224,
  226,  230,  234,  238,  242,  246,  249,  253,  257,  258,  261,  265,  266,  270,  274,  278,
  282,  286,  289,  293,  296,  300,  304,  308,  312,  316,  320,  323,  324,  327,  331
};

static const u8 Gulimche12_width[95] = {
 1, 3, 6, 5, 5, 5, 1, 3, 3, 5, 5, 2, 5, 1, 5, 5,
 2, 5, 5, 5, 5, 5, 5, 5, 5, 1, 2, 5, 5, 5, 5, 5,
 5, 5, 5, 5, 5, 5, 5, 5, 1, 4, 5, 5, 5, 5, 5, 5,
 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 6, 2, 4, 5, 2,
 5, 5, 5, 5, 5, 3, 5, 5, 1, 3, 5, 1, 5, 5, 5, 5,
 5, 4, 5, 4, 5, 5, 5, 5, 5, 5, 4, 1, 4, 5, 4
};

Gulimche12::Gulimche12(u8 fixedWidth) : PackedFont1 (
	33,
	127,
	Gulimche12_glyphdata,
	Gulimche12_offset,
	Gulimche12_width,
	12,
	3,
	6) {
	if (fixedWidth) setFontWidth(fixedWidth);
};
