#include "gungsuh15.h"
#include "typedefsTGDS.h"
#include "dsregs.h"
#include "dsregs_asm.h"

using namespace WoopsiUI;

static const u16 Gungsuh15_glyphdata[699] = {
/* '!' */	0xFFFF,0xC3C0,
/* '"' */	0xDEF6,0x9480,0x0000,0x0000,0x0000,
/* '#' */	0x330C,0xC330,0xCCFF,0xCCC3,0x30CC,0xFFCC,0xC330,0xCC33,0x0000,0x0000,
/* '$' */	0x1818,0x7BC7,0xC3C3,0x6038,0x0EC3,0xC3E3,0xDE18,0x1800,
/* '%' */	0x7866,0x330F,0x0018,0x3870,0xE0C0,0x0786,0x6330,0xF000,0x0000,
/* '&' */	0x3860,0x6060,0x2077,0xD4DC,0xC8C8,0xDC77,0x0000,0x0000,
/* ''' */	0xFD40,0x0000,
/* '(' */	0x1264,0xCCCC,0xCCC4,0x6210,
/* ')' */	0x8462,0x3333,0x3332,0x6480,
/* '*' */	0x0000,0x0CB7,0xF31E,0x4800,0x0000,0x0000,
/* '+' */	0x0000,0x1818,0x18FF,0x1818,0x1800,0x0000,0x0000,0x0000,
/* ',' */	0x0000,0x0F60,
/* '-' */	0x0000,0x0000,0x00FF,0x0000,0x0000,0x0000,0x0000,0x0000,
/* '.' */	0x0000,0x0F00,
/* '/' */	0x0204,0x1820,0xC106,0x0830,0x4182,0x0C10,0x2000,
/* '0' */	0x7D8F,0x1E3C,0x78F1,0xE3C7,0x8F1B,0xE000,0x0000,
/* '1' */	0xF0C3,0x0C30,0xC30C,0x30C3,0x3F00,0x0000,
/* '2' */	0x3C66,0xC3C3,0x060C,0x1830,0x63F3,0xDBCF,0x0000,0x0000,
/* '3' */	0xFFC6,0xCC0C,0x187C,0x0603,0x03C3,0x663C,0x0000,0x0000,
/* '4' */	0x0E0F,0x0586,0xC263,0x3119,0x8CFF,0x8301,0x83F0,0x0000,0x0000,
/* '5' */	0xFEC6,0xC6C0,0xC0FC,0xC603,0x03C3,0xC67C,0x0000,0x0000,
/* '6' */	0x3E67,0xC3C0,0xFCE6,0xC3C3,0xC3C3,0x663C,0x0000,0x0000,
/* '7' */	0xF3DF,0xC6C6,0x060C,0x0C0C,0x1818,0x1818,0x0000,0x0000,
/* '8' */	0x3C66,0xC3C3,0x663C,0x66C3,0xC3C3,0x663C,0x0000,0x0000,
/* '9' */	0x3C66,0xC3C3,0xC3C3,0x673F,0x03C3,0xE67C,0x0000,0x0000,
/* ':' */	0x0F00,0xF000,
/* ';' */	0x0F00,0xF600,
/* '<' */	0x020C,0x30C3,0x0C30,0x3030,0x3030,0x3020,0x0000,
/* '=' */	0x0000,0x0000,0xFF00,0x00FF,0x0000,0x0000,0x0000,0x0000,
/* '>' */	0x8181,0x8181,0x8181,0x8618,0x6186,0x0800,0x0000,
/* '?' */	0x7D8F,0x1E30,0x6186,0x1830,0x00C1,0x8000,0x0000,
/* '@' */	0x3E18,0xCC1B,0x1ECD,0xB66D,0x9B6E,0xCED8,0x03F0,0x0000,0x0000,0x0000,
/* 'A' */	0x7C0E,0x0706,0xC361,0xB18C,0xFE63,0x3198,0xDEF0,0x0000,0x0000,
/* 'B' */	0xFC66,0x6363,0x667C,0x6663,0x6363,0x66FC,0x0000,0x0000,
/* 'C' */	0x3ADF,0x1E3C,0x1830,0x60C1,0x8599,0xE000,0x0000,
/* 'D' */	0xFC66,0x6363,0x6363,0x6363,0x6363,0x66FC,0x0000,0x0000,
/* 'E' */	0xFF63,0x6360,0x667E,0x6660,0x6063,0x63FF,0x0000,0x0000,
/* 'F' */	0xFF63,0x6360,0x667E,0x6660,0x6060,0x60F0,0x0000,0x0000,
/* 'G' */	0x3B33,0xB0D8,0x6C06,0x033F,0x86C3,0x6199,0xC7A0,0x0000,0x0000,
/* 'H' */	0xF7B1,0x98CC,0x6633,0xF98C,0xC663,0x3198,0xDEF0,0x0000,0x0000,
/* 'I' */	0xFCC3,0x0C30,0xC30C,0x30C3,0x3F00,0x0000,
/* 'J' */	0x3F0C,0x0C0C,0x0C0C,0x0C0C,0xCCCC,0xCCF8,0x0000,0x0000,
/* 'K' */	0xF3B1,0x998D,0x8783,0xE198,0xCC63,0x3198,0xDEF0,0x0000,0x0000,
/* 'L' */	0xF060,0x6060,0x6060,0x6060,0x6363,0x63FF,0x0000,0x0000,
/* 'M' */	0xE1D8,0x6739,0xCE73,0x9FE6,0xD9B6,0x6D98,0x661B,0xCF00,0x0000,0x0000,
/* 'N' */	0xE7B1,0x9CCE,0x67B3,0x59BC,0xCE67,0x3198,0xDE60,0x0000,0x0000,
/* 'O' */	0x3C66,0xC3C3,0xC3C3,0xC3C3,0xC3C3,0x663C,0x0000,0x0000,
/* 'P' */	0xFC66,0x6363,0x6363,0x667C,0x6060,0x60F0,0x0000,0x0000,
/* 'Q' */	0x3C33,0x30D8,0x6C36,0x1B0D,0x86DB,0x7F99,0x87F0,0x3000,0x0000,
/* 'R' */	0xFC33,0x18CC,0x6633,0x31F0,0xCC63,0x3198,0xDE70,0x0000,0x0000,
/* 'S' */	0x3B67,0xC3C3,0x6038,0x0C06,0xC3C3,0xE6DC,0x0000,0x0000,
/* 'T' */	0xFFDB,0xDBDB,0x1818,0x1818,0x1818,0x187E,0x0000,0x0000,
/* 'U' */	0xF7B1,0x98CC,0x6633,0x198C,0xC663,0x318D,0x8380,0x0000,0x0000,
/* 'V' */	0xF7B1,0x98CC,0x6631,0xB0D8,0x6C1C,0x0E07,0x0100,0x0000,0x0000,
/* 'W' */	0xF3D8,0x6619,0x866D,0x9B66,0xD8FC,0x330C,0xC330,0xCC00,0x0000,0x0000,
/* 'X' */	0xF7B1,0x98C6,0xC360,0xE070,0x6C36,0x3198,0xDEF0,0x0000,0x0000,
/* 'Y' */	0xF3D8,0x6618,0xCC33,0x0780,0xC030,0x0C03,0x00C0,0xFC00,0x0000,0x0000,
/* 'Z' */	0xFF8F,0x3661,0x830C,0x1866,0xCF1F,0xF000,0x0000,
/* '[' */	0xFCCC,0xCCCC,0xCCCC,0xCCF0,
/* '\' */	0x7BC6,0x30C6,0x18CF,0x5E6B,0x0D60,0xF81B,0x0360,0x6C0D,0x8000,0x0000,0x0000,
/* ']' */	0xF333,0x3333,0x3333,0x33F0,
/* '^' */	0x183C,0x66C3,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
/* '_' */	0x0000,0x0000,0x0000,0x0000,0x0007,0xF000,0x0000,
/* '`' */	0xCC80,0x0000,0x0000,
/* 'a' */	0x0000,0x007C,0xC606,0x7EC6,0xC6C6,0xC67B,0x0000,0x0000,
/* 'b' */	0xE060,0x606C,0x7663,0x6363,0x6363,0x765C,0x0000,0x0000,
/* 'c' */	0x0000,0x003B,0x67C3,0xC0C0,0xC0C1,0x633E,0x0000,0x0000,
/* 'd' */	0x0E06,0x0636,0x6EC6,0xC6C6,0xC6C6,0x6E33,0x0000,0x0000,
/* 'e' */	0x0000,0x003C,0x66C3,0xC3FF,0xC0C0,0x633E,0x0000,0x0000,
/* 'f' */	0x1E60,0xC7F3,0x060C,0x1830,0x60C7,0xE000,0x0000,
/* 'g' */	0x0000,0x003B,0x66C6,0xC6C6,0xC666,0x3E06,0xC67C,0x0000,
/* 'h' */	0xE030,0x180D,0xC733,0x198C,0xC663,0x3198,0xDEF0,0x0000,0x0000,
/* 'i' */	0x30C0,0x3C30,0xC30C,0x30C3,0x3F00,0x0000,
/* 'j' */	0x18C0,0xF18C,0x6318,0xC639,0xB800,
/* 'k' */	0xE030,0x180D,0xE663,0x61B0,0xF07C,0x3318,0xDCF0,0x0000,0x0000,
/* 'l' */	0xF0C3,0x0C30,0xC30C,0x30C3,0x3F00,0x0000,
/* 'm' */	0x0000,0x0003,0x6C6D,0x9B66,0xD9B6,0x6D9B,0x66DB,0xB700,0x0000,0x0000,
/* 'n' */	0x0000,0x001B,0xC633,0x198C,0xC663,0x3198,0xDEF0,0x0000,0x0000,
/* 'o' */	0x0000,0x003C,0x66C3,0xC3C3,0xC3C3,0x663C,0x0000,0x0000,
/* 'p' */	0x0000,0x00DC,0x6663,0x6363,0x6366,0x7C60,0x60F0,0x0000,
/* 'q' */	0x0000,0x003A,0x66C6,0xC6C6,0xC666,0x3E06,0x060F,0x0000,
/* 'r' */	0x0000,0x00EE,0x7B73,0x6360,0x6060,0x60F0,0x0000,0x0000,
/* 's' */	0x0000,0x03DC,0xF8D8,0x1C0D,0x8F1D,0xE000,0x0000,
/* 't' */	0x3030,0x30FE,0x3030,0x3030,0x3033,0x331E,0x0000,0x0000,
/* 'u' */	0x0000,0x001C,0xE633,0x198C,0xC663,0x3199,0xC7B0,0x0000,0x0000,
/* 'v' */	0x0000,0x001E,0xF633,0x198C,0x6C36,0x0E07,0x0100,0x0000,0x0000,
/* 'w' */	0x0000,0x0003,0xCF61,0x9866,0xD9B6,0x6D8F,0xC330,0xCC00,0x0000,0x0000,
/* 'x' */	0x0000,0x00E7,0x6666,0x3C18,0x3C66,0x66E7,0x0000,0x0000,
/* 'y' */	0x0000,0x001E,0xF633,0x18D8,0x6C1C,0x0E06,0x0303,0x03C0,0x0000,
/* 'z' */	0x0000,0x07FC,0xD986,0x1830,0xCF1F,0xF000,0x0000,
/* '{' */	0x198C,0x6318,0xDC31,0x8C63,0x1860,
/* '|' */	0xFFFF,0xFFFC,
/* '}' */	0xC318,0xC631,0x8763,0x18C6,0x3300,
/* '~' */	0x0000,0x0000,0x0078,0x3330,0x7800,0x0000,0x0000,0x0000,0x0000,0x0000,
/* 0x7F */	0x03F8,0x6186,0x1861,0x8618,0x7F00,0x0000,
};

static const u16 Gungsuh15_offset[95] = {
    0,    2,    7,   17,   25,   34,   42,   44,   48,   52,   58,   66,   68,   76,   78,   85,
   92,   98,  106,  114,  123,  131,  139,  147,  155,  163,  165,  167,  174,  182,  189,  196,
  206,  215,  223,  230,  238,  246,  254,  263,  272,  278,  286,  295,  303,  313,  322,  330,
  338,  347,  356,  364,  372,  381,  390,  400,  409,  419,  426,  430,  441,  445,  453,  460,
  463,  471,  479,  487,  495,  503,  510,  518,  527,  533,  538,  547,  553,  563,  572,  580,
  588,  596,  604,  611,  619,  628,  637,  647,  655,  664,  671,  676,  678,  683,  693
};

static const u8 Gungsuh15_width[95] = {
 2, 5,10, 8, 9, 8, 2, 4, 4, 6, 8, 2, 8, 2, 7, 7,
 6, 8, 8, 9, 8, 8, 8, 8, 8, 2, 2, 7, 8, 7, 7,10,
 9, 8, 7, 8, 8, 8, 9, 9, 6, 8, 9, 8,10, 9, 8, 8,
 9, 9, 8, 8, 9, 9,10, 9,10, 7, 4,11, 4, 8, 7, 3,
 8, 8, 8, 8, 8, 7, 8, 9, 6, 5, 9, 6,10, 9, 8, 8,
 8, 8, 7, 8, 9, 9,10, 8, 9, 7, 5, 2, 5,10, 6
};

Gungsuh15::Gungsuh15(u8 fixedWidth) : PackedFont1 (
	33,
	127,
	Gungsuh15_glyphdata,
	Gungsuh15_offset,
	Gungsuh15_width,
	16,
	4,
	11) {
	if (fixedWidth) setFontWidth(fixedWidth);
};
