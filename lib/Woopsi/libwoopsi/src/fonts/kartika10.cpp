#include "kartika10.h"
#include "typedefsTGDS.h"
#include "dsregs.h"
#include "dsregs_asm.h"

using namespace WoopsiUI;

static const u16 Kartika10_glyphdata[327] = {
/* '!' */	0xFA00,
/* '"' */	0xB400,0x0000,
/* '#' */	0x51BE,0xEF32,0x8000,0x0000,
/* '$' */	0x23AB,0x4716,0xAE20,0x0000,
/* '%' */	0xE952,0xC7F2,0xA553,0x8000,0x0000,
/* '&' */	0x7923,0x1C9E,0x2740,0x0000,
/* ''' */	0xC000,
/* '(' */	0x5AA9,0x4000,
/* ')' */	0xA556,0x8000,
/* '*' */	0x4A80,0x0000,
/* '+' */	0x0109,0xF210,0x0000,0x0000,
/* ',' */	0x0300,
/* '-' */	0x000E,0x0000,
/* '.' */	0x0200,
/* '/' */	0x55A8,0x0000,
/* '0' */	0x6999,0x9960,0x0000,
/* '1' */	0x3C92,0x4800,
/* '2' */	0x6912,0x48F0,0x0000,
/* '3' */	0x6912,0x11E0,0x0000,
/* '4' */	0x1195,0x2F88,0x4000,0x0000,
/* '5' */	0xF8E9,0x11E0,0x0000,
/* '6' */	0x698E,0x9960,0x0000,
/* '7' */	0xF122,0x2440,0x0000,
/* '8' */	0x6996,0x9960,0x0000,
/* '9' */	0x6999,0x7960,0x0000,
/* ':' */	0x2200,
/* ';' */	0x2300,
/* '<' */	0x003C,0x6100,0x0000,
/* '=' */	0x00F0,0xF000,0x0000,
/* '>' */	0x00C3,0x6800,0x0000,
/* '?' */	0x7442,0x2200,0x8000,0x0000,
/* '@' */	0x1E30,0x97B6,0x9A4D,0x2EFC,0xC03E,0x0000,
/* 'A' */	0x10C3,0x1279,0x2840,0x0000,
/* 'B' */	0xF463,0xE8C7,0xC000,0x0000,
/* 'C' */	0x7A18,0x2082,0x1780,0x0000,
/* 'D' */	0xFA18,0x6186,0x1F80,0x0000,
/* 'E' */	0xFC21,0xF843,0xE000,0x0000,
/* 'F' */	0xF88E,0x8880,0x0000,
/* 'G' */	0x7A18,0x2786,0x17C0,0x0000,
/* 'H' */	0x8C63,0xF8C6,0x2000,0x0000,
/* 'I' */	0xFE00,
/* 'J' */	0x1111,0x1960,0x0000,
/* 'K' */	0x8CA9,0x8A4A,0x2000,0x0000,
/* 'L' */	0x8888,0x88F0,0x0000,
/* 'M' */	0x838F,0x1D5A,0xB564,0x8000,0x0000,
/* 'N' */	0x8E73,0x5ACE,0x2000,0x0000,
/* 'O' */	0x7A18,0x6186,0x1780,0x0000,
/* 'P' */	0xF463,0xE842,0x0000,0x0000,
/* 'Q' */	0x7A18,0x6186,0x3781,0x0000,
/* 'R' */	0xF228,0xBC92,0x2840,0x0000,
/* 'S' */	0x7460,0xE0C5,0xC000,0x0000,
/* 'T' */	0xF908,0x4210,0x8000,0x0000,
/* 'U' */	0x8C63,0x18C5,0xC000,0x0000,
/* 'V' */	0x8524,0x9230,0xC300,0x0000,
/* 'W' */	0x88C4,0x554A,0xA551,0x1088,0x0000,0x0000,
/* 'X' */	0x8A94,0x452A,0x2000,0x0000,
/* 'Y' */	0x8A94,0x4210,0x8000,0x0000,
/* 'Z' */	0xF884,0x4443,0xE000,0x0000,
/* '[' */	0xEAAA,0xC000,
/* '\' */	0xA954,0x0000,
/* ']' */	0xD555,0xC000,
/* '^' */	0x5680,0x0000,
/* '_' */	0x0000,0x0000,0x00F8,0x0000,
/* '`' */	0x9000,0x0000,
/* 'a' */	0x0069,0x7970,0x0000,
/* 'b' */	0x88E9,0x99E0,0x0000,
/* 'c' */	0x0069,0x8960,0x0000,
/* 'd' */	0x1179,0x9970,0x0000,
/* 'e' */	0x0069,0xF870,0x0000,
/* 'f' */	0xEEA8,0x0000,
/* 'g' */	0x0079,0x9971,0xE000,
/* 'h' */	0x88E9,0x9990,0x0000,
/* 'i' */	0xBE00,
/* 'j' */	0xBF80,
/* 'k' */	0x88AC,0xCA90,0x0000,
/* 'l' */	0xFE00,
/* 'm' */	0x0003,0xB499,0x3264,0x8000,0x0000,
/* 'n' */	0x00E9,0x9990,0x0000,
/* 'o' */	0x0069,0x9960,0x0000,
/* 'p' */	0x00E9,0x99E8,0x8000,
/* 'q' */	0x0079,0x9971,0x1000,
/* 'r' */	0x03C9,0x2000,
/* 's' */	0x0078,0x61E0,0x0000,
/* 't' */	0x0BA4,0x9800,
/* 'u' */	0x0099,0x9970,0x0000,
/* 'v' */	0x0023,0x2530,0x8000,0x0000,
/* 'w' */	0x0002,0x4D5A,0xB591,0x0000,0x0000,
/* 'x' */	0x0022,0xA22A,0x2000,0x0000,
/* 'y' */	0x0022,0xA528,0x84C0,0x0000,
/* 'z' */	0x00F2,0x48F0,0x0000,
/* '{' */	0x6928,0x9260,
/* '|' */	0xFF80,
/* '}' */	0xC922,0x92C0,
/* '~' */	0xE0C0,0x0000,0x0000,0x0000,
/* 0x7F */	0xFE18,0x6186,0x1861,0x8610,
/* 0x80 */	0x0000,
/* 0x81 */	0x0000,
/* 0x82 */	0x0000,
/* 0x83 */	0x0000,
/* 0x84 */	0x0000,
/* 0x85 */	0x0000,
/* 0x86 */	0x0000,
/* 0x87 */	0x0000,
/* 0x88 */	0x0000,
/* 0x89 */	0x0000,
/* 0x8A */	0x0000,
/* 0x8B */	0x0000,
/* 0x8C */	0x0000,
/* 0x8D */	0x0000,
/* 0x8E */	0x0000,
/* 0x8F */	0x0000,
/* 0x90 */	0x0000,
/* 0x91 */	0x0000,
/* 0x92 */	0x0000,
/* 0x93 */	0x0000,
/* 0x94 */	0x0000,
/* 0x95 */	0x0000,
/* 0x96 */	0x0000,
/* 0x97 */	0x0000,
/* 0x98 */	0x0000,
/* 0x99 */	0x0000,
/* 0x9A */	0x0000,
/* 0x9B */	0x0000,
/* 0x9C */	0x0000,
/* 0x9D */	0x0000,
/* 0x9E */	0x0000,
/* 0x9F */	0xFC00,0x0000,0x0000,0x0000,
};

static const u16 Kartika10_offset[127] = {
    0,    1,    3,    7,   11,   16,   20,   21,   23,   25,   27,   31,   32,   34,   35,   37,
   40,   42,   45,   48,   52,   55,   58,   61,   64,   67,   68,   69,   72,   75,   78,   82,
   88,   92,   96,  100,  104,  108,  111,  115,  119,  120,  123,  127,  130,  135,  139,  143,
  147,  151,  155,  159,  163,  167,  171,  177,  181,  185,  189,  191,  193,  195,  197,  201,
  203,  206,  209,  212,  215,  218,  220,  223,  226,  227,  228,  231,  232,  237,  240,  243,
  246,  249,  251,  254,  256,  259,  263,  268,  272,  276,  279,  281,  282,  284,  288,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,  305,  306,  307,  308,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,  322,  323
};

static const u8 Kartika10_width[127] = {
 1, 3, 5, 5, 7, 6, 1, 2, 2, 3, 5, 1, 3, 1, 2, 4,
 3, 4, 4, 5, 4, 4, 4, 4, 4, 1, 1, 4, 4, 4, 5, 9,
 6, 5, 6, 6, 5, 4, 6, 5, 1, 4, 5, 4, 7, 5, 6, 5,
 6, 6, 5, 5, 5, 6, 9, 5, 5, 5, 2, 2, 2, 3, 5, 2,
 4, 4, 4, 4, 4, 2, 4, 4, 1, 1, 4, 1, 7, 4, 4, 4,
 4, 3, 4, 3, 4, 5, 7, 5, 5, 4, 3, 1, 3, 5, 6, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6
};

Kartika10::Kartika10(u8 fixedWidth) : PackedFont1 (
	33,
	159,
	Kartika10_glyphdata,
	Kartika10_offset,
	Kartika10_width,
	10,
	3,
	9) {
	if (fixedWidth) setFontWidth(fixedWidth);
};
