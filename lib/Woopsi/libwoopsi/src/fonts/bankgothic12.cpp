#include "bankgothic12.h"
#include "typedefsTGDS.h"
#include "dsregs.h"
#include "dsregs_asm.h"

using namespace WoopsiUI;

static const u16 BankGothic12_glyphdata[439] = {
/* '!' */	0xF400,
/* '"' */	0xB680,0x0000,0x0000,
/* '#' */	0x0A12,0x147F,0x2428,0xFE48,0x5000,0x0000,
/* '$' */	0x11FE,0x47F1,0x327F,0x8810,0x0000,0x0000,
/* '%' */	0x624A,0x26CE,0x9149,0x1800,0x0000,0x0000,0x0000,
/* '&' */	0x7891,0x8698,0xDEC0,0x0000,0x0000,0x0000,
/* ''' */	0xE000,
/* '(' */	0x6AA4,0x0000,
/* ')' */	0x9558,0x0000,
/* '*' */	0x4D69,0x0000,0x0000,
/* '+' */	0x1020,0x47F1,0x0204,0x0000,0x0000,0x0000,
/* ',' */	0x0600,
/* '-' */	0x0380,0x0000,0x0000,
/* '.' */	0x0400,
/* '/' */	0x1224,0x4880,0x0000,
/* '0' */	0xFF06,0x0C18,0x3FC0,0x0000,0x0000,0x0000,
/* '1' */	0xD550,0x0000,
/* '2' */	0xFE10,0x8CC7,0xF000,0x0000,0x0000,
/* '3' */	0xFE13,0x8187,0xF000,0x0000,0x0000,
/* '4' */	0x0C28,0x922F,0xE080,0x0000,0x0000,0x0000,
/* '5' */	0xFA0F,0x8107,0xE000,0x0000,0x0000,
/* '6' */	0x3B0F,0xE187,0xF000,0x0000,0x0000,
/* '7' */	0xFE10,0x8410,0x8000,0x0000,0x0000,
/* '8' */	0xFF05,0xF418,0x3FC0,0x0000,0x0000,0x0000,
/* '9' */	0xFE18,0x7F0D,0xC000,0x0000,0x0000,
/* ':' */	0x4400,
/* ';' */	0x4E00,
/* '<' */	0x0239,0x8603,0x80C0,0x0000,0x0000,0x0000,
/* '=' */	0xFE00,0x07F0,0x0000,0x0000,0x0000,0x0000,
/* '>' */	0x80E0,0x3033,0x9800,0x0000,0x0000,0x0000,
/* '?' */	0xFC46,0x4010,0x0000,0x0000,
/* '@' */	0x1F86,0x1900,0xC799,0x9324,0x6492,0xEC60,0x03F0,0x0000,0x0000,
/* 'A' */	0x1818,0x2466,0x7E83,0x0000,0x0000,0x0000,
/* 'B' */	0xFE1F,0xA187,0xF000,0x0000,0x0000,
/* 'C' */	0xFE18,0x2087,0xF000,0x0000,0x0000,
/* 'D' */	0xFD0E,0x0C18,0x7F80,0x0000,0x0000,0x0000,
/* 'E' */	0xFE0F,0x2083,0xF000,0x0000,0x0000,
/* 'F' */	0xFE08,0x3C82,0x0000,0x0000,0x0000,
/* 'G' */	0xFF06,0x04F8,0x3FC0,0x0000,0x0000,0x0000,
/* 'H' */	0x8307,0xFC18,0x3040,0x0000,0x0000,0x0000,
/* 'I' */	0xFC00,
/* 'J' */	0x0843,0x18FC,0x0000,0x0000,
/* 'K' */	0x8F23,0x8709,0x91C0,0x0000,0x0000,0x0000,
/* 'L' */	0x8208,0x2083,0xF000,0x0000,0x0000,
/* 'M' */	0x81C3,0xA599,0x9981,0x0000,0x0000,0x0000,
/* 'N' */	0x8386,0xCC58,0x7040,0x0000,0x0000,0x0000,
/* 'O' */	0xFF06,0x0C18,0x3FC0,0x0000,0x0000,0x0000,
/* 'P' */	0xFE18,0x7F82,0x0000,0x0000,0x0000,
/* 'Q' */	0xFF06,0x0C99,0x3FC2,0x0600,0x0000,0x0000,
/* 'R' */	0xFD0A,0x17E9,0x90C0,0x0000,0x0000,0x0000,
/* 'S' */	0xFF07,0xF818,0x3FC0,0x0000,0x0000,0x0000,
/* 'T' */	0xFE20,0x4081,0x0200,0x0000,0x0000,0x0000,
/* 'U' */	0x8306,0x0C18,0x3FC0,0x0000,0x0000,0x0000,
/* 'V' */	0x8142,0x2224,0x1818,0x0000,0x0000,0x0000,
/* 'W' */	0x8453,0x24C9,0x4A33,0x0840,0x0000,0x0000,0x0000,0x0000,
/* 'X' */	0xC224,0x1818,0x24C3,0x0000,0x0000,0x0000,
/* 'Y' */	0xC6C8,0xA081,0x0200,0x0000,0x0000,0x0000,
/* 'Z' */	0xFC21,0x0843,0xF000,0x0000,0x0000,
/* '[' */	0xF249,0x3800,0x0000,
/* '\' */	0x8842,0x2100,0x0000,
/* ']' */	0xE492,0x7800,0x0000,
/* '^' */	0x10D2,0x1800,0x0000,0x0000,0x0000,0x0000,
/* '_' */	0x0000,0x0000,0x0000,0xFC00,0x0000,
/* '`' */	0x9000,0x0000,
/* 'a' */	0x0020,0xA247,0xD040,0x0000,0x0000,0x0000,
/* 'b' */	0x07E3,0xE8FC,0x0000,0x0000,
/* 'c' */	0x07E3,0x08FC,0x0000,0x0000,
/* 'd' */	0x03E8,0x6187,0xE000,0x0000,0x0000,
/* 'e' */	0x07E1,0xE87C,0x0000,0x0000,
/* 'f' */	0x07E1,0xC840,0x0000,0x0000,
/* 'g' */	0x03F8,0x2787,0xF000,0x0000,0x0000,
/* 'h' */	0x0218,0x7F86,0x1000,0x0000,0x0000,
/* 'i' */	0x7C00,
/* 'j' */	0x0043,0x18FC,0x0000,0x0000,
/* 'k' */	0x023B,0x30B2,0x3000,0x0000,0x0000,
/* 'l' */	0x0421,0x087C,0x0000,0x0000,
/* 'm' */	0x0107,0x1D59,0x3040,0x0000,0x0000,0x0000,
/* 'n' */	0x021C,0x6D8E,0x1000,0x0000,0x0000,
/* 'o' */	0x03F8,0x6187,0xF000,0x0000,0x0000,
/* 'p' */	0x07E3,0xF840,0x0000,0x0000,
/* 'q' */	0x03F8,0x6997,0xF102,0x0000,0x0000,
/* 'r' */	0x03E8,0xBE92,0x3000,0x0000,0x0000,
/* 's' */	0x03F8,0x3F07,0xF000,0x0000,0x0000,
/* 't' */	0x07C8,0x4210,0x0000,0x0000,
/* 'u' */	0x0218,0x6187,0xF000,0x0000,0x0000,
/* 'v' */	0x0214,0x9230,0xC000,0x0000,0x0000,
/* 'w' */	0x0089,0x5A5A,0x6624,0x0000,0x0000,0x0000,
/* 'x' */	0x0337,0x0C5B,0x3000,0x0000,0x0000,
/* 'y' */	0x018C,0xA081,0x0200,0x0000,0x0000,0x0000,
/* 'z' */	0x07C4,0x447C,0x0000,0x0000,
/* '{' */	0x1908,0x4260,0x8421,0x0600,
/* '|' */	0xFFF0,
/* '}' */	0xC108,0x420C,0x8421,0x3000,
/* '~' */	0x00E6,0x7000,0x0000,0x0000,0x0000,0x0000,
/* 0x7F */	0x0F99,0x99F0,0x0000,
};

static const u16 BankGothic12_offset[95] = {
    0,    1,    4,   10,   16,   23,   29,   30,   32,   34,   37,   43,   44,   47,   48,   51,
   57,   59,   64,   69,   75,   80,   85,   90,   96,  101,  102,  103,  109,  115,  121,  125,
  134,  140,  145,  150,  156,  161,  166,  172,  178,  179,  183,  189,  194,  200,  206,  212,
  217,  223,  229,  235,  241,  247,  253,  261,  267,  273,  278,  281,  284,  287,  293,  298,
  300,  306,  310,  314,  319,  323,  327,  332,  337,  338,  342,  347,  351,  357,  362,  367,
  371,  376,  381,  386,  390,  395,  400,  406,  411,  417,  421,  425,  426,  430,  436
};

static const u8 BankGothic12_width[95] = {
 1, 3, 8, 7, 9, 7, 1, 2, 2, 4, 7, 1, 3, 1, 4, 7,
 2, 6, 6, 7, 6, 6, 6, 7, 6, 1, 1, 7, 7, 7, 5,11,
 8, 6, 6, 7, 6, 6, 7, 7, 1, 5, 7, 6, 8, 7, 7, 6,
 7, 7, 7, 7, 7, 8,10, 8, 7, 6, 3, 4, 3, 7, 6, 2,
 7, 5, 5, 6, 5, 5, 6, 6, 1, 5, 6, 5, 7, 6, 6, 5,
 6, 6, 6, 5, 6, 6, 8, 6, 7, 5, 5, 1, 5, 7, 4
};

BankGothic12::BankGothic12(u8 fixedWidth) : PackedFont1 (
	33,
	127,
	BankGothic12_glyphdata,
	BankGothic12_offset,
	BankGothic12_width,
	12,
	3,
	11) {
	if (fixedWidth) setFontWidth(fixedWidth);
};
