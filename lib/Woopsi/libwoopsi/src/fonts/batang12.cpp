#include "batang12.h"
#include "typedefsTGDS.h"
#include "dsregs.h"
#include "dsregs_asm.h"

using namespace WoopsiUI;

static const u16 Batang12_glyphdata[447] = {
/* '!' */	0xFD80,
/* '"' */	0xB400,0x0000,0x0000,
/* '#' */	0x0028,0x53F2,0x853F,0x2850,0x0000,0x0000,
/* '$' */	0x236F,0x5618,0xB5ED,0x8840,
/* '%' */	0x609F,0x9264,0x0810,0x2649,0x8906,0x0000,
/* '&' */	0x3048,0x4830,0x6792,0x928C,0x8C73,0x0000,
/* ''' */	0xC000,
/* '(' */	0x2949,0x2448,0x8000,
/* ')' */	0x8912,0x494A,0x0000,
/* '*' */	0x0009,0x5754,0x8000,0x0000,
/* '+' */	0x0008,0x4F90,0x8000,0x0000,
/* ',' */	0x0001,0x6000,
/* '-' */	0x0000,0x0F80,0x0000,0x0000,
/* '.' */	0x0180,
/* '/' */	0x0844,0x2211,0x0884,0x0000,
/* '0' */	0x7463,0x18C6,0x3170,0x0000,
/* '1' */	0x5924,0x92E0,0x0000,
/* '2' */	0x7462,0x1111,0x11F0,0x0000,
/* '3' */	0x7442,0x1704,0x3170,0x0000,
/* '4' */	0x118C,0xA54B,0xE238,0x0000,
/* '5' */	0xFC21,0xE884,0x3170,0x0000,
/* '6' */	0x7461,0xE8C6,0x3170,0x0000,
/* '7' */	0x7D18,0x4208,0x4104,0x1000,0x0000,
/* '8' */	0x7463,0x1746,0x3170,0x0000,
/* '9' */	0x7463,0x18BC,0x3170,0x0000,
/* ':' */	0x2100,
/* ';' */	0x0401,0x6000,
/* '<' */	0x0888,0x8820,0x8208,0x0000,
/* '=' */	0x0001,0xF07C,0x0000,0x0000,
/* '>' */	0x8208,0x2088,0x8880,0x0000,
/* '?' */	0x7462,0x2210,0x0420,0x0000,
/* '@' */	0x1E10,0x92B2,0xDA2D,0x1693,0x3640,0x1F80,0x0000,
/* 'A' */	0x0804,0x0502,0x8221,0xF104,0x82E3,0x8000,0x0000,
/* 'B' */	0xFC85,0x0A17,0xC850,0xA1FC,0x0000,0x0000,
/* 'C' */	0x3C8A,0x0C08,0x1020,0x213C,0x0000,0x0000,
/* 'D' */	0xF889,0x0A14,0x2850,0xA2F8,0x0000,0x0000,
/* 'E' */	0xFC85,0x0227,0xC890,0x21FC,0x0000,0x0000,
/* 'F' */	0xFC85,0x0227,0xC890,0x20E0,0x0000,0x0000,
/* 'G' */	0x3C44,0x8280,0x8F82,0x8246,0x3A00,0x0000,
/* 'H' */	0xE742,0x4242,0x7E42,0x4242,0xE700,0x0000,
/* 'I' */	0xE924,0x92E0,0x0000,
/* 'J' */	0x3884,0x2108,0x5260,0x0000,
/* 'K' */	0xEF44,0x4850,0x7048,0x4442,0xE700,0x0000,
/* 'L' */	0xE081,0x0204,0x0810,0xA2FC,0x0000,0x0000,
/* 'M' */	0xC0D0,0x2619,0x8652,0x94A4,0xC932,0xE1C0,0x0000,0x0000,
/* 'N' */	0xE762,0x5252,0x4A4A,0x4646,0xE200,0x0000,
/* 'O' */	0x3C42,0x8181,0x8181,0x8142,0x3C00,0x0000,
/* 'P' */	0xFC85,0x0A17,0xC810,0x20E0,0x0000,0x0000,
/* 'Q' */	0x3C21,0x2050,0x2814,0xCA94,0xCC3C,0x8180,0x0000,
/* 'R' */	0xFC42,0x4242,0x7C44,0x4242,0xE300,0x0000,
/* 'S' */	0x7638,0x5818,0x1871,0xB800,0x0000,
/* 'T' */	0xFF26,0x4881,0x0204,0x0838,0x0000,0x0000,
/* 'U' */	0xE742,0x4242,0x4242,0x4242,0x3C00,0x0000,
/* 'V' */	0xE3A0,0x9044,0x4220,0xA050,0x1008,0x0000,0x0000,
/* 'W' */	0xEEE8,0x8911,0x1542,0xA855,0x0440,0x8811,0x0000,0x0000,0x0000,
/* 'X' */	0xEE88,0xA141,0x050A,0x22EE,0x0000,0x0000,
/* 'Y' */	0xEE89,0x1142,0x8204,0x0838,0x0000,0x0000,
/* 'Z' */	0x7E20,0x8420,0x8421,0xF800,0x0000,
/* '[' */	0xEAAA,0xAC00,
/* '\' */	0xEEE8,0x8911,0x7FF2,0xA855,0x0440,0x8811,0x0000,0x0000,0x0000,
/* ']' */	0xD555,0x5C00,
/* '^' */	0x22A2,0x0000,0x0000,0x0000,
/* '_' */	0x0000,0x0000,0x00F8,0x0000,
/* '`' */	0x9000,0x0000,
/* 'a' */	0x0007,0x2209,0xE8A2,0x7400,0x0000,
/* 'b' */	0xC081,0x6324,0x2850,0xB258,0x0000,0x0000,
/* 'c' */	0x0003,0x9182,0x0811,0x3800,0x0000,
/* 'd' */	0x0C08,0xD268,0x50A1,0x2636,0x0000,0x0000,
/* 'e' */	0x0007,0xA187,0xF821,0x7800,0x0000,
/* 'f' */	0x34F4,0x4444,0xE000,
/* 'g' */	0x0007,0x6289,0xC81E,0x8617,0x8000,
/* 'h' */	0xC081,0x6324,0x4891,0x22EE,0x0000,0x0000,
/* 'i' */	0x4324,0x92E0,0x0000,
/* 'j' */	0x2192,0x4935,0x0000,
/* 'k' */	0xC105,0xD251,0xC492,0xEC00,0x0000,
/* 'l' */	0xC924,0x92E0,0x0000,
/* 'm' */	0x0000,0x159D,0x2492,0x4924,0x92DD,0x8000,0x0000,
/* 'n' */	0x0001,0x6724,0x4891,0x22EE,0x0000,0x0000,
/* 'o' */	0x0003,0x1286,0x1852,0x3000,0x0000,
/* 'p' */	0x0003,0x6324,0x2850,0xB258,0x8380,0x0000,
/* 'q' */	0x0000,0xDA68,0x50A1,0x2634,0x0838,0x0000,
/* 'r' */	0x0034,0xD421,0x08E0,0x0000,
/* 's' */	0x001F,0x1838,0x31F0,0x0000,
/* 't' */	0x44F4,0x4444,0x3000,
/* 'u' */	0x0003,0x3224,0x4891,0x2636,0x0000,0x0000,
/* 'v' */	0x0003,0xBA24,0x450A,0x0810,0x0000,0x0000,
/* 'w' */	0x0000,0x03BB,0xA224,0x4455,0x0AA0,0x8811,0x0000,0x0000,0x0000,
/* 'x' */	0x0003,0xBA22,0x820A,0x22EE,0x0000,0x0000,
/* 'y' */	0x0003,0xBA24,0x450A,0x0811,0x4300,0x0000,
/* 'z' */	0x001F,0x1111,0x11F0,0x0000,
/* '{' */	0x2925,0x1248,0x8000,
/* '|' */	0xFFE0,
/* '}' */	0x8924,0x524A,0x0000,
/* '~' */	0x0000,0x0006,0x3380,0x0000,0x0000,0x0000,
/* 0x7F */	0xF999,0x9999,0xF000,
};

static const u16 Batang12_offset[95] = {
    0,    1,    4,   10,   14,   20,   26,   27,   30,   33,   37,   41,   43,   47,   48,   52,
   56,   59,   63,   67,   71,   75,   79,   84,   88,   92,   93,   95,   99,  103,  107,  111,
  118,  125,  131,  137,  143,  149,  155,  161,  167,  170,  174,  180,  186,  194,  200,  206,
  212,  219,  225,  230,  236,  242,  249,  258,  264,  270,  275,  277,  286,  288,  292,  296,
  298,  303,  309,  314,  320,  325,  328,  333,  339,  342,  345,  350,  353,  360,  366,  371,
  377,  383,  387,  391,  394,  400,  406,  415,  421,  427,  431,  434,  435,  438,  444
};

static const u8 Batang12_width[95] = {
 1, 3, 7, 5, 8, 8, 1, 3, 3, 5, 5, 2, 5, 1, 5, 5,
 3, 5, 5, 5, 5, 5, 6, 5, 5, 1, 2, 5, 5, 5, 5, 9,
 9, 7, 7, 7, 7, 7, 8, 8, 3, 5, 8, 7,10, 8, 8, 7,
 9, 8, 6, 7, 8, 9,11, 7, 7, 6, 2,11, 2, 5, 5, 2,
 6, 7, 6, 7, 6, 4, 6, 7, 3, 3, 6, 3, 9, 7, 6, 7,
 7, 5, 5, 4, 7, 7,11, 7, 7, 5, 3, 1, 3, 7, 4
};

Batang12::Batang12(u8 fixedWidth) : PackedFont1 (
	33,
	127,
	Batang12_glyphdata,
	Batang12_offset,
	Batang12_width,
	12,
	3,
	11) {
	if (fixedWidth) setFontWidth(fixedWidth);
};
