#include "batang15.h"
#include "typedefsTGDS.h"
#include "dsregs.h"
#include "dsregs_asm.h"

using namespace WoopsiUI;

static const u16 Batang15_glyphdata[726] = {
/* '!' */	0xFF30,
/* '"' */	0xB680,0x0000,0x0000,
/* '#' */	0x0912,0x127F,0x2424,0x48FE,0x4890,0x9000,0x0000,0x0000,
/* '$' */	0x1020,0xF2A9,0x3214,0x1C14,0x264A,0xA782,0x0400,
/* '%' */	0x3822,0x2221,0xF109,0x0890,0x3880,0x0800,0x8E04,0x8848,0x4442,0x2222,0x0E00,0x0000,0x0000,
/* '&' */	0x1C04,0x4088,0x1101,0x4030,0x0AFA,0x4484,0x9092,0x0C21,0x13DC,0x0000,0x0000,
/* ''' */	0xE000,
/* '(' */	0x2949,0x2492,0x2440,
/* ')' */	0x8912,0x4924,0xA500,
/* '*' */	0x0000,0x4ABA,0xA400,0x0000,0x0000,
/* '+' */	0x0000,0x4081,0x1FC4,0x0810,0x0000,0x0000,0x0000,
/* ',' */	0x0000,0x0580,
/* '-' */	0x0000,0x0000,0x1FC0,0x0000,0x0000,0x0000,0x0000,
/* '.' */	0x0030,
/* '/' */	0x0204,0x1020,0x8104,0x0820,0x4102,0x0810,0x0000,
/* '0' */	0x3889,0x1418,0x3060,0xC182,0x8911,0xC000,0x0000,
/* '1' */	0x2708,0x4210,0x8421,0x09F0,0x0000,
/* '2' */	0x388A,0x0C10,0x4104,0x1043,0x0617,0xE000,0x0000,
/* '3' */	0x388A,0x0810,0x4701,0x0183,0x0511,0xC000,0x0000,
/* '4' */	0x0C14,0x1424,0x2444,0x4484,0xFF04,0x041F,0x0000,0x0000,
/* '5' */	0x7E81,0x0207,0x8880,0x8103,0x0511,0xC000,0x0000,
/* '6' */	0x388A,0x0C0B,0x98A0,0xC183,0x0511,0xC000,0x0000,
/* '7' */	0x7E86,0x0C20,0x4102,0x0410,0x2040,0x8000,0x0000,
/* '8' */	0x388A,0x0C14,0x4711,0x4183,0x0511,0xC000,0x0000,
/* '9' */	0x388A,0x0C18,0x3051,0x9D03,0x0511,0xC000,0x0000,
/* ':' */	0x3060,
/* ';' */	0x0500,0x1600,
/* '<' */	0x0421,0x0842,0x0408,0x1020,0x4000,0x0000,
/* '=' */	0x0000,0x000F,0xE000,0x7F00,0x0000,0x0000,0x0000,
/* '>' */	0x8102,0x0408,0x1084,0x2108,0x0000,0x0000,
/* '?' */	0x388A,0x0C10,0x2082,0x0810,0x0040,0x8000,0x0000,
/* '@' */	0x0F81,0x0420,0x2469,0x8999,0x1191,0x1932,0x8CC4,0x0020,0x41F8,0x0000,0x0000,0x0000,
/* 'A' */	0x0400,0x8028,0x0501,0x1022,0x0821,0xFC20,0x8809,0x0170,0x7000,0x0000,0x0000,
/* 'B' */	0xFF04,0x1081,0x1022,0x087F,0x0811,0x0120,0x2404,0x817F,0xC000,0x0000,0x0000,
/* 'C' */	0x1E88,0x6405,0x0180,0x2008,0x0200,0x4010,0x1208,0x7C00,0x0000,0x0000,
/* 'D' */	0xFF04,0x1081,0x1022,0x0240,0x4809,0x0120,0x4408,0x827F,0x8000,0x0000,0x0000,
/* 'E' */	0xFF84,0x0880,0x9082,0x107E,0x0841,0x0820,0x0404,0x817F,0xC000,0x0000,0x0000,
/* 'F' */	0xFF84,0x0880,0x9082,0x107E,0x0841,0x0820,0x0400,0x807C,0x0000,0x0000,0x0000,
/* 'G' */	0x1F84,0x1101,0x2008,0x0100,0x20FC,0x0240,0x4808,0x830F,0xA000,0x0000,0x0000,
/* 'H' */	0xE1D0,0x2409,0x0240,0x9FE4,0x0902,0x4090,0x240B,0x8700,0x0000,0x0000,
/* 'I' */	0xF908,0x4210,0x8421,0x09F0,0x0000,
/* 'J' */	0x3E10,0x2040,0x8102,0x0409,0x1223,0x8000,0x0000,
/* 'K' */	0xFBE2,0x0821,0x0220,0x2402,0xA032,0x0210,0x2082,0x0820,0x4F9F,0x0000,0x0000,0x0000,
/* 'L' */	0xF808,0x0200,0x8020,0x0802,0x0080,0x2048,0x120B,0xFE00,0x0000,0x0000,
/* 'M' */	0xE00E,0x6030,0xC061,0x4142,0x8284,0x8909,0x1211,0x4422,0x8842,0x1084,0x27C1,0xF000,0x0000,0x0000,0x0000,
/* 'N' */	0xE1F3,0x0430,0x4284,0x2842,0x4422,0x4224,0x2142,0x0C20,0xCF84,0x0000,0x0000,0x0000,
/* 'O' */	0x1F04,0x1101,0x2028,0x0300,0x600C,0x0140,0x4808,0x820F,0x8000,0x0000,0x0000,
/* 'P' */	0xFF08,0x2204,0x8120,0x4823,0xF080,0x2008,0x0203,0xE000,0x0000,0x0000,
/* 'Q' */	0x1F02,0x0840,0x4404,0x8028,0x0280,0x2802,0x4E45,0x1420,0x81F9,0x0060,0x0000,0x0000,
/* 'R' */	0xFF04,0x1081,0x1022,0x087E,0x0841,0x0820,0x8410,0x817C,0x3000,0x0000,0x0000,
/* 'S' */	0x3E42,0x8181,0x6018,0x0601,0x8181,0x427C,0x0000,0x0000,
/* 'T' */	0x7FC8,0x8A10,0xC210,0x4008,0x0100,0x2004,0x0080,0x100F,0x8000,0x0000,0x0000,
/* 'U' */	0xF8F9,0x0108,0x0840,0x4202,0x1010,0x8084,0x0420,0x2101,0x0410,0x1F00,0x0000,0x0000,0x0000,
/* 'V' */	0xF8F9,0x0108,0x0820,0x8104,0x0820,0x2201,0x1005,0x0028,0x0080,0x0400,0x0000,0x0000,0x0000,
/* 'W' */	0xE71D,0x0824,0x2088,0x4421,0x108C,0x412A,0x0528,0x14A0,0x2100,0x8402,0x1000,0x0000,0x0000,0x0000,
/* 'X' */	0xFBE4,0x1044,0x0880,0xA008,0x0100,0x5011,0x0220,0x827D,0xF000,0x0000,0x0000,
/* 'Y' */	0xFBE4,0x1044,0x0880,0xA014,0x0100,0x2004,0x0080,0x100F,0x8000,0x0000,0x0000,
/* 'Z' */	0x7FA0,0xA080,0x4040,0x4020,0x2020,0x1050,0x5FE0,0x0000,0x0000,
/* '[' */	0xF249,0x2492,0x49C0,
/* '\' */	0xF7DF,0x2104,0x2104,0x1088,0xFFFF,0x1188,0x0950,0x0A50,0x0A50,0x0420,0x0420,0x0420,0x0000,0x0000,0x0000,0x0000,
/* ']' */	0xE492,0x4924,0x93C0,
/* '^' */	0x1051,0x1410,0x0000,0x0000,0x0000,0x0000,0x0000,
/* '_' */	0x0000,0x0000,0x0000,0x0000,0x0007,0xF000,0x0000,
/* '`' */	0x8880,0x0000,0x0000,
/* 'a' */	0x0000,0x0007,0x9081,0x0E65,0x0A33,0xB000,0x0000,
/* 'b' */	0xC040,0x4040,0x5C62,0x4141,0x4141,0x625C,0x0000,0x0000,
/* 'c' */	0x0000,0x0003,0xA8E0,0xC081,0x0109,0xE000,0x0000,
/* 'd' */	0x0602,0x0202,0x3A46,0x8282,0x8282,0x463B,0x0000,0x0000,
/* 'e' */	0x0000,0x0003,0x88A0,0xFF81,0x0109,0xE000,0x0000,
/* 'f' */	0x1892,0x08FC,0x8208,0x2082,0x1C00,0x0000,
/* 'g' */	0x0000,0x0000,0x3B44,0x4444,0x7880,0x7C82,0x827C,0x0000,
/* 'h' */	0xC040,0x4040,0x5C62,0x4242,0x4242,0x42E7,0x0000,0x0000,
/* 'i' */	0x480C,0x9249,0x7000,
/* 'j' */	0x1100,0x3111,0x1111,0x9600,
/* 'k' */	0xC040,0x4040,0x4E44,0x4850,0x6844,0x42E7,0x0000,0x0000,
/* 'l' */	0xC924,0x9249,0x7000,
/* 'm' */	0x0000,0x0000,0x0000,0x0DDE,0x3109,0x0848,0x4242,0x1210,0x9085,0xCE70,0x0000,0x0000,0x0000,
/* 'n' */	0x0000,0x0000,0xDC62,0x4242,0x4242,0x42E7,0x0000,0x0000,
/* 'o' */	0x0000,0x0000,0x3C42,0x8181,0x8181,0x423C,0x0000,0x0000,
/* 'p' */	0x0000,0x0000,0xDC62,0x4141,0x4141,0x625C,0x40E0,0x0000,
/* 'q' */	0x0000,0x0000,0x3A46,0x8282,0x8282,0x463A,0x0207,0x0000,
/* 'r' */	0x0000,0x00D9,0x9410,0x4104,0x3800,0x0000,
/* 's' */	0x0000,0x0007,0xD0A0,0xB80D,0x050B,0xE000,0x0000,
/* 't' */	0x0082,0x08F8,0x8208,0x2082,0x4600,0x0000,
/* 'u' */	0x0000,0x0000,0xC642,0x4242,0x4242,0x463B,0x0000,0x0000,
/* 'v' */	0x0000,0x0000,0x0E3A,0x0888,0x4414,0x0A02,0x0100,0x0000,0x0000,
/* 'w' */	0x0000,0x0000,0x000E,0xEE88,0x9111,0x542A,0x8220,0x4408,0x8000,0x0000,0x0000,
/* 'x' */	0x0000,0x0000,0xE742,0x2418,0x1824,0x42E7,0x0000,0x0000,
/* 'y' */	0x0000,0x0000,0x0E3A,0x0888,0x4414,0x0A02,0x010D,0x0300,0x0000,
/* 'z' */	0x0000,0x007D,0x1884,0x2118,0xBE00,0x0000,
/* '{' */	0x1222,0x22C2,0x2222,0x2100,
/* '|' */	0xFFFC,
/* '}' */	0x8444,0x4434,0x4444,0x4800,
/* '~' */	0x0000,0x0000,0x0000,0x1E18,0x7800,0x0000,0x0000,0x0000,0x0000,0x0000,
/* 0x7F */	0x03F8,0x6186,0x1861,0x8618,0x7F00,0x0000,
};

static const u16 Batang15_offset[95] = {
    0,    1,    4,   12,   19,   32,   43,   44,   47,   50,   55,   62,   64,   71,   72,   79,
   86,   91,   98,  105,  113,  120,  127,  134,  141,  148,  149,  151,  157,  164,  170,  177,
  189,  200,  211,  221,  232,  243,  254,  265,  275,  280,  287,  299,  309,  324,  336,  347,
  357,  369,  380,  388,  399,  412,  425,  439,  450,  461,  470,  473,  489,  492,  499,  506,
  509,  516,  524,  531,  539,  546,  552,  560,  568,  571,  575,  583,  586,  599,  607,  615,
  623,  631,  637,  644,  650,  658,  667,  678,  686,  695,  701,  705,  706,  710,  720
};

static const u8 Batang15_width[95] = {
 1, 3, 8, 7,13,11, 1, 3, 3, 5, 7, 2, 7, 1, 7, 7,
 5, 7, 7, 8, 7, 7, 7, 7, 7, 1, 2, 6, 7, 6, 7,12,
11,11,10,11,11,11,11,10, 5, 7,12,10,15,12,11,10,
12,11, 8,11,13,13,14,11,11, 9, 3,16, 3, 7, 7, 3,
 7, 8, 7, 8, 7, 6, 8, 8, 3, 4, 8, 3,13, 8, 8, 8,
 8, 6, 7, 6, 8, 9,11, 8, 9, 6, 4, 1, 4,10, 6
};

Batang15::Batang15(u8 fixedWidth) : PackedFont1 (
	33,
	127,
	Batang15_glyphdata,
	Batang15_offset,
	Batang15_width,
	16,
	4,
	16) {
	if (fixedWidth) setFontWidth(fixedWidth);
};
